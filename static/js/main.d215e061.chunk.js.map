{"version":3,"sources":["fbManager.js","components/AuthForm.js","routes/Auth.js","components/Tweety.js","components/TweetyFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","className","type","placeholder","required","onClick","prev","Auth","onSocialProviderLogin","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Tweety","tweetyObj","isOwner","editing","setEditing","text","newTweety","setNewTweety","onDeleteClick","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","update","src","faTrash","faPencilAlt","TweetyFactory","userObj","tweety","setTweety","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","createId","collection","add","maxLength","htmlFor","faPlus","accept","fileData","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","Boolean","readAsDataURL","opacity","backgroundImage","faTimes","Home","tweetys","setTweetys","useEffect","orderBy","onSnapshot","snapshot","tweetyArray","docs","map","marginTop","Profile","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","updateProfile","autoFocus","signOut","push","Navigation","to","marginRight","faUser","marginLeft","AppRouter","isLoggedIn","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d215e061.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_DB_URL,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MSG_SENDER_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n};\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\n\r\nexport const authService = firebase.auth();\r\n\r\nexport const dbService = firebase.firestore();\r\n\r\nexport const storageService = firebase.storage();\r\n","import React, { useState } from \"react\";\r\nimport { authService } from \"fbManager\";\r\n\r\nconst AuthForm = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [newAccount, setNewAccount] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { name, value },\r\n    } = event;\r\n\r\n    if (name === \"email\") {\r\n      setEmail(value);\r\n    } else if (name === \"password\") {\r\n      setPassword(value);\r\n    }\r\n  };\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    let data;\r\n    try {\r\n      if (newAccount) {\r\n        data = await authService.createUserWithEmailAndPassword(email, password);\r\n      } else {\r\n        data = await authService.signInWithEmailAndPassword(email, password);\r\n      }\r\n      console.log(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n      setError(error.message);\r\n    }\r\n  };\r\n\r\n  const toggleAccount = () => setNewAccount((prev) => !prev);\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit} className=\"container\">\r\n        <input\r\n          name=\"email\"\r\n          type=\"text\"\r\n          placeholder=\"Email\"\r\n          value={email}\r\n          onChange={onChange}\r\n          required\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          name=\"password\"\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          value={password}\r\n          onChange={onChange}\r\n          required\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          value={newAccount ? \"Create Account\" : \"Sign In\"}\r\n          className=\"authInput authSubmit\"\r\n        />\r\n        {error && <span className=\"authError\">{error}</span>}\r\n      </form>\r\n      <span onClick={toggleAccount} className=\"authSwitch\">\r\n        {newAccount ? \"Sign In\" : \"Create Account\"}\r\n      </span>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AuthForm;\r\n","import React from \"react\";\r\nimport { authService, firebaseInstance } from \"fbManager\";\r\nimport AuthForm from \"components/AuthForm\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter, faGoogle, faGithub } from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nconst Auth = () => {\r\n  const onSocialProviderLogin = async (event) => {\r\n    const {\r\n      target: { name },\r\n    } = event;\r\n    let provider;\r\n    if (name === \"google\") {\r\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n    } else if (name === \"github\") {\r\n      provider = new firebaseInstance.auth.GithubAuthProvider();\r\n    }\r\n\r\n    await authService.signInWithPopup(provider);\r\n  };\r\n\r\n  return (\r\n    <div className=\"authContainer\">\r\n      <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"3x\" style={{ marginBottom: 30 }} />\r\n      <AuthForm />\r\n      <div className=\"authBtns\">\r\n        <button onClick={onSocialProviderLogin} name=\"google\" className=\"authBtn\">\r\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\r\n        </button>\r\n        <button onClick={onSocialProviderLogin} name=\"github\" className=\"authBtn\">\r\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Auth;\r\n","import React, { useState } from \"react\";\r\nimport { dbService, storageService } from \"fbManager\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Tweety = ({ tweetyObj, isOwner }) => {\r\n  const [editing, setEditing] = useState(false);\r\n  const [newTweety, setNewTweety] = useState(tweetyObj.text);\r\n  const onDeleteClick = async (event) => {\r\n    const confirm = window.confirm(\"Are you sure you want to delete this Tweety?\");\r\n    if (confirm) {\r\n      await dbService.doc(`tweety/${tweetyObj.id}`).delete();\r\n      await storageService.refFromURL(tweetyObj.attachmentUrl).delete();\r\n    }\r\n  };\r\n\r\n  const toggleEditing = () => setEditing((prev) => !prev);\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    await dbService.doc(`tweety/${tweetyObj.id}`).update({\r\n      text: newTweety,\r\n    });\r\n    setEditing(false);\r\n  };\r\n\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewTweety(value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"tweety\">\r\n      {editing ? (\r\n        <>\r\n          <form onSubmit={onSubmit} className=\"container tweetyEdit\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Edit your Tweety\"\r\n              value={newTweety}\r\n              onChange={onChange}\r\n              required\r\n            />\r\n            <input type=\"submit\" value=\"Update Tweety\" className=\"formBtn\" />\r\n          </form>\r\n          <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n            Cancel\r\n          </span>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <h4>{tweetyObj.text}</h4>\r\n          {tweetyObj.attachmentUrl && <img src={tweetyObj.attachmentUrl} />}\r\n          {isOwner && (\r\n            <div className=\"tweety__actions\">\r\n              <span onClick={onDeleteClick}>\r\n                <FontAwesomeIcon icon={faTrash} />\r\n              </span>\r\n              <span onClick={toggleEditing}>\r\n                <FontAwesomeIcon icon={faPencilAlt} />\r\n              </span>\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tweety;\r\n","import React, { useState } from \"react\";\r\nimport { dbService, storageService } from \"fbManager\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst TweetyFactory = ({ userObj }) => {\r\n  const [tweety, setTweety] = useState(\"\");\r\n  const [attachment, setAttachment] = useState(\"\");\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (tweety === \"\") {\r\n      return;\r\n    }\r\n\r\n    let attachmentUrl = \"\";\r\n    if (attachment !== \"\") {\r\n      const attachmentRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\r\n      const response = await attachmentRef.putString(attachment, \"data_url\");\r\n      attachmentUrl = await response.ref.getDownloadURL();\r\n    }\r\n\r\n    const tweetyObj = {\r\n      text: tweety,\r\n      createdAt: Date.now(),\r\n      createId: userObj.uid,\r\n      attachmentUrl,\r\n    };\r\n\r\n    await dbService.collection(\"tweety\").add(tweetyObj);\r\n    setTweety(\"\");\r\n    setAttachment(\"\");\r\n  };\r\n\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setTweety(value);\r\n  };\r\n\r\n  const onFileChange = (event) => {\r\n    const {\r\n      target: { files },\r\n    } = event;\r\n    const fileData = files[0];\r\n    const reader = new FileReader();\r\n    reader.onloadend = (finishedEvent) => {\r\n      const {\r\n        currentTarget: { result },\r\n      } = finishedEvent;\r\n      setAttachment(result);\r\n    };\r\n\r\n    if (Boolean(fileData)) {\r\n      reader.readAsDataURL(fileData);\r\n    }\r\n  };\r\n\r\n  const onClearAttachment = () => setAttachment(\"\");\r\n\r\n  return (\r\n    <form onSubmit={onSubmit} className=\"factoryForm\">\r\n      <div className=\"factoryInput__container\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"What's on your mind ?\"\r\n          value={tweety}\r\n          onChange={onChange}\r\n          maxLength={120}\r\n          required\r\n          className=\"factoryInput__input\"\r\n        />\r\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n      </div>\r\n      <label htmlFor=\"attach-file\" className=\"factoryInput__label\">\r\n        <span>Add photos</span>\r\n        <FontAwesomeIcon icon={faPlus} />\r\n      </label>\r\n      <input\r\n        id=\"attach-file\"\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n        onChange={onFileChange}\r\n        style={{\r\n          opacity: 0,\r\n        }}\r\n      />\r\n\r\n      {attachment && (\r\n        <div className=\"factoryForm__attachment\">\r\n          <img\r\n            src={attachment}\r\n            style={{\r\n              backgroundImage: attachment,\r\n            }}\r\n          />\r\n          <div onClick={onClearAttachment} className=\"factoryForm__clear\">\r\n            <span>Remove</span>\r\n            <FontAwesomeIcon icon={faTimes} />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default TweetyFactory;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Tweety from \"components/Tweety\";\r\nimport { dbService } from \"fbManager\";\r\nimport TweetyFactory from \"components/TweetyFactory\";\r\n\r\nconst Home = ({ userObj }) => {\r\n  const [tweetys, setTweetys] = useState([]);\r\n  const loadTweetys = () => {\r\n    dbService\r\n      .collection(\"tweety\")\r\n      .orderBy(\"createdAt\", \"desc\")\r\n      .onSnapshot((snapshot) => {\r\n        const tweetyArray = snapshot.docs.map((doc) => ({\r\n          id: doc.id,\r\n          ...doc.data(),\r\n        }));\r\n        setTweetys(tweetyArray);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadTweetys();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"switchRouters\">\r\n      <div className=\"container\">\r\n        <TweetyFactory userObj={userObj} />\r\n        <div style={{ marginTop: 30 }}>\r\n          {tweetys.map((data) => (\r\n            <Tweety key={data.id} tweetyObj={data} isOwner={data.createId === userObj.uid} />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Home;\r\n","import { authService, dbService } from \"fbManager\";\r\nimport React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Profile = ({ userObj, refreshUser }) => {\r\n  const history = useHistory();\r\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n\r\n  const onLogoutClick = (event) => {\r\n    authService.signOut();\r\n    history.push(\"/\");\r\n  };\r\n\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewDisplayName(value);\r\n  };\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    if (userObj.displayName !== newDisplayName) {\r\n      await userObj.updateProfile({\r\n        displayName: newDisplayName,\r\n      });\r\n      refreshUser();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"switchRouters\">\r\n      <div className=\"container\">\r\n        <form onSubmit={onSubmit} className=\"profileForm\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"New Display name\"\r\n            onChange={onChange}\r\n            value={newDisplayName}\r\n            required\r\n            autoFocus\r\n            className=\"formInput\"\r\n          />\r\n          <input\r\n            type=\"submit\"\r\n            value=\"Update Profile\"\r\n            className=\"formBtn\"\r\n            style={{\r\n              marginTop: 10,\r\n            }}\r\n          />\r\n        </form>\r\n        <span onClick={onLogoutClick} className=\"formBtn cancelBtn logOut\">\r\n          Log out\r\n        </span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Navigation = ({ userObj }) => (\r\n  <nav>\r\n    <ul className=\"navList\">\r\n      <li>\r\n        <Link to=\"/\" style={{ marginRight: 10 }}>\r\n          <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\r\n        </Link>\r\n      </li>\r\n      <li>\r\n        <Link to=\"/profile\">\r\n          <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n          <span style={{ marginTop: 10, marginLeft: 10 }}>\r\n            {userObj.displayName ? `${userObj.displayName} 의 Profile` : \"Profile\"}\r\n          </span>\r\n        </Link>\r\n      </li>\r\n    </ul>\r\n  </nav>\r\n);\r\n\r\nexport default Navigation;\r\n","import React from \"react\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Auth from \"routes/Auth\";\r\nimport Home from \"routes/Home\";\r\nimport Profile from \"routes/Profile\";\r\nimport Navigation from \"./Navigation\";\r\n\r\nconst AppRouter = ({ isLoggedIn, userObj, refreshUser }) => {\r\n  return (\r\n    <Router>\r\n      {isLoggedIn && <Navigation userObj={userObj} />}\r\n      <Switch>\r\n        {isLoggedIn ? (\r\n          <>\r\n            <Route exact path=\"/\">\r\n              <Home userObj={userObj} />\r\n            </Route>\r\n            <Route exact path=\"/profile\">\r\n              <Profile userObj={userObj} refreshUser={refreshUser} />\r\n            </Route>\r\n          </>\r\n        ) : (\r\n          <Route exact path=\"/\">\r\n            <Auth />\r\n          </Route>\r\n        )}\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import React, { useState, useEffect } from \"react\";\nimport AppRouter from \"./Router\";\nimport { authService } from \"fbManager\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n\n  return (\n    <>\n      {init ? (\n        <AppRouter isLoggedIn={Boolean(userObj)} userObj={userObj} refreshUser={refreshUser} />\n      ) : (\n        \"Initalizing...\"\n      )}\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"components/App\";\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n"],"sourceRoot":""}